/*
 * Biblioteca.c
 *
 *  Created on: Apr 9, 2022
 *      Author: dante
 */

#include "Biblioteca.h"

//PEDIR DATOS

int GetInt (char mensaje[], int reintentos, int minimo, int maximo, char mensajeError[], int *pNumeroIngresado)
{
  int retorno = -1;
  int auxiliarInt;
  int retornoScanf;

  if (mensaje != NULL && minimo < maximo && mensajeError != NULL && pNumeroIngresado != NULL && reintentos > 0)
  {
    printf ("%s", mensaje);
    retornoScanf = scanf ("%d", &auxiliarInt);

    do
    {
      if (retornoScanf != 1 || auxiliarInt > maximo || auxiliarInt < minimo)
      {
	printf ("%s", mensajeError);
	retornoScanf = scanf ("%d", &auxiliarInt);
	reintentos--;
      }
      else
      {
	reintentos = 0;
	*pNumeroIngresado = auxiliarInt;
	retorno = 0;
      }
    }
    while (reintentos > 0);
  }
  return retorno;
}
int GetInt_simple (char mensaje[], char mensajeError[], float *pNumeroIngresado)
{
  int retorno = -1;
  int auxiliarInt;
  int retornoScanf;

  printf ("%s", mensaje);
  retornoScanf = scanf ("%d", &auxiliarInt);
  if (retornoScanf != 0)
  {
    printf ("%s", mensajeError);
    retornoScanf = scanf ("%d", &auxiliarInt);
  }
  else
  {
    *pNumeroIngresado = auxiliarInt;
    retorno = 0;
  }
  return retorno;
}
void CargarArray (int array[], int tamano)
{
  for (int i = 0; i < tamano; i++)
  {
    array[i] = i;
  }
}
void ImprimirArray (float array[], int tamano)
{
  for (int i = 0; i < tamano; i++)
  {
    printf ("\n%f", array[i]);
  }
}
void MainMenu (int *pNumeroIngresado, char mensaje[], int reintentos, char opcion1[], char opcion2[], char opcion3[], char opcion4[])
{
  int auxiliar;
  puts ("=====================================================================================");

  if (mensaje != NULL && opcion1 != NULL && opcion2 != NULL && opcion3 != NULL && opcion4 != NULL && reintentos < 100 && reintentos > 0)
  {
    printf ("%s", mensaje);
    printf ("\n1-para %s\n2-para %s\n3-para %s\n4-para %s ", opcion1, opcion2, opcion3, opcion4);
    scanf ("%d", &auxiliar);

    while (reintentos != 0)
    {
      if (auxiliar != 1 && auxiliar != 2 && auxiliar != 3 && auxiliar != 4)
      {
	puts ("\n~~~~~~ERROR~~~~~~~~~");
	printf ("\n1-para %s\n2-para %s\n3-para %s\n4-para %s ", opcion1, opcion2, opcion3, opcion4);
	scanf ("%d", &auxiliar);
	reintentos--;
      }
      else
      {
	reintentos = 0;
	*pNumeroIngresado = auxiliar;
      }
    }
  }
  else
  {
    puts ("\n\t\t\t~~~~~~ERROR~~~~~~~~~\n\t\tIngrese las condiciones nuevamente");
  }
}

int AerolineasMenu (int *pNumeroIngresado, int reintentos)
{
  int auxiliar;
  int resultado;
  int rtn;
  rtn = -1;
  puts ("===============================Menu Principal===========================\n");

  for (int i = 0; i < reintentos; i++)
  {
    puts ("1-Ingresar Kilometros\n2-Ingresar Precio de Vuelos\n3-Calcular Todos los costos\n5-Carga Forzada\n6-Salir");
    resultado = scanf ("%d", &auxiliar);
    if (resultado != 0)
    {
      while (auxiliar != 1 && auxiliar != 2 && auxiliar != 3 && auxiliar != 4 && auxiliar != 5 && auxiliar != 6)
      {
	puts ("~~~~~~ERROR~~~~~~~~~\nDatoIngresado No Valido, intente nuevamente");
	scanf ("%d", &auxiliar);
      }
      *pNumeroIngresado = auxiliar;
      reintentos=0;
      rtn = 0;
    }else
      {
	  puts ("Ocurrio un Error al ejecutar, reinicie el programa");
      }
  }
  return rtn;
}
int GetFloatPositivo (char mensaje[], float *pNumeroIngresado, char mensajeError[], int reintentos)
{
  int retorno = -1;
  float auxiliarInt;
  int retornoScanf;

  printf ("%s", mensaje);
  retornoScanf = scanf ("%f", &auxiliarInt);
  for (int i = 0; i < reintentos; i++)
  {
    if (retornoScanf != 0)
    {
      while (auxiliarInt < 0)
      {
	printf ("%s", mensajeError);
	retornoScanf = scanf ("%f", &auxiliarInt);
      }
      *pNumeroIngresado = auxiliarInt;
      retorno = 0;
      i = reintentos;
    }
    else
    {
      printf ("%s", mensajeError);
    }
  }
  return retorno;
}

void ImprimirResultadosVuelos (float kilometrosIngresados, char nombrecompania[], float precioVuelo, float preciosVuelos[], int tamano)
{
  int i;
  printf ("KMs Ingresados: %.2f KM", kilometrosIngresados);
  printf ("\n\nPrecio %s: %.2f", nombrecompania, precioVuelo);
  for (i = 0; i < tamano; i++)
  {
    switch (i)
    {
      case 0:
	printf ("\na) Precio con tarjeta de debito: $ %.2f", preciosVuelos[0]);
	break;
      case 1:
	printf ("\nb) Precio con tarjeta de credito: $ %.2f", preciosVuelos[1]);
	break;
      case 2:
	printf ("\nc) Precio pagando con Bitcoin: %.2f BTC", preciosVuelos[2]);
	break;
      case 3:
	printf ("\nd) Mostrar precio Unitario: $ %.2f\n\n", preciosVuelos[3]);
	break;
    }
  }
}
void imprimirDiferencia(float primerNumero, float segundoNumero, char mensaje[])
{
  float diferencia;
  diferencia = Restar(primerNumero,segundoNumero);
  printf("%s %.2f",mensaje,diferencia);
}
//CALCULOS

float Sumar (float numero1, float numero2)
{
  float resultado;
  resultado = numero1 + numero2;
  return resultado;
}
float Restar (float numero1, float numero2)
{
  float resultado;
  resultado = numero1 - numero2;
  return resultado;
}
float Multiplicar (float numero1, float numero2)
{
  float resultado;
  resultado = numero1 * numero2;
  return resultado;
}
float Dividir (float divisor, float dividendo)
{
  float cociente;
  if (dividendo != 0)
  {
    cociente = divisor / dividendo;
  }
  else
  {
    cociente = 0;
  }
  return cociente;
}
void CalculosPrecioVuelos (float kilometroIngresado, float precioVuelo, float preciosFinales[])
{
  float precioDebito;
  float precioCredito;
  float precioBitcoin;
  float precioKilometro;
  int descuento;
  int aumento;
  float bitcoin;
  descuento = 10;
  aumento = 25;
  bitcoin = 4606954.55;

  precioDebito = precioVuelo - (precioVuelo * descuento) / 100;
  preciosFinales[0] = precioDebito;
  precioCredito = (precioVuelo * aumento) / 100 + precioVuelo;
  preciosFinales[1] = precioCredito;
  precioBitcoin = (precioVuelo / bitcoin);
  preciosFinales[2] = precioBitcoin;
  precioKilometro = precioVuelo / kilometroIngresado;
  preciosFinales[3] = precioKilometro;
}

